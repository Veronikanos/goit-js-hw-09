{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBb,EAAAgB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IArCjDQ,SAASC,cAAc,QAG/BC,iBAAiB,UAExB,SAAiCC,GAC/BA,EAAMC,iBAON,IANA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCf,EAAwBa,EAAxBb,MAAOgB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEjBC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAiBH,OAAOF,EAAOG,OAE1BG,EAAI,EAAGA,EAAID,EAAgBC,IAClClC,EAAckC,EAAGL,GACjBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\n// const hh = document.querySelectorAll('input');\n\nformEl.addEventListener('submit', onSubmitPromisesHandler);\n\nfunction onSubmitPromisesHandler(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n\n  let firstDelay = Number(delay.value);\n  let stepDelay = Number(step.value);\n  let amountPromises = Number(amount.value);\n\n  for (let i = 0; i < amountPromises; i++) {\n    createPromise(i, firstDelay);\n    firstDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","step","amount","firstDelay","Number","value","stepDelay","amountPromises","i"],"version":3,"file":"03-promises.65171661.js.map"}