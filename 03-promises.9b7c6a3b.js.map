{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA7BEQ,SAASC,cAAc,QAG/BC,iBAAiB,UAExB,SAAiCC,GAC/BA,EAAMC,iBACN,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAMI,OAAOC,SAE7C,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAiBH,OAAOJ,EAAOK,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAgBC,IACnCxB,EAAcwB,EAAGL,GACjBA,GAAcG,C,IAkBlBtB,EACGyB,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\n// const hh = document.querySelectorAll('input');\n\nformEl.addEventListener('submit', onSubmitPromisesHandler);\n\nfunction onSubmitPromisesHandler(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n\n  let firstDelay = Number(delay.value);\n  let stepDelay = Number(step.value);\n  let amountPromises = Number(amount.value);\n\n  for (let i = 0; i <= amountPromises; i++) {\n    createPromise(i, firstDelay);\n    firstDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","step","amount","target","elements","firstDelay","Number","value","stepDelay","amountPromises","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.9b7c6a3b.js.map"}